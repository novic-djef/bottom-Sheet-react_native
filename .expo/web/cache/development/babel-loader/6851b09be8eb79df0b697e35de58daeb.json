{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\nouveaux projet\\\\ajout panier buttonsheet\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\createAnimatedComponent.js\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ReanimatedEventEmitter from \"./ReanimatedEventEmitter\";\nimport AnimatedEvent from \"./reanimated1/core/AnimatedEvent\";\nimport AnimatedNode from \"./reanimated1/core/AnimatedNode\";\nimport AnimatedValue from \"./reanimated1/core/AnimatedValue\";\nimport { createOrReusePropsNode } from \"./reanimated1/core/AnimatedProps\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport invariant from 'fbjs/lib/invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nvar NODE_MAPPING = new Map();\nfunction listener(data) {\n  var component = NODE_MAPPING.get(data.viewTag);\n  component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {\n}\n\nfunction hasAnimatedNodes(value) {\n  if (value instanceof AnimatedNode) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.some(function (item) {\n      return hasAnimatedNodes(item);\n    });\n  }\n  if (value && typeof value === 'object') {\n    return Object.keys(value).some(function (key) {\n      return hasAnimatedNodes(value[key]);\n    });\n  }\n  return false;\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return array;\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nexport default function createAnimatedComponent(Component) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else {\n          _this._component.setNativeProps(_this._propsAnimated.__getValue());\n        }\n      };\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n\n          if (ref != null && ref.getNode == null) {\n            ref.getNode = function () {\n              var _ref$constructor$name;\n              console.warn('%s: Calling %s on the ref of an Animated component ' + 'is no longer necessary. You can now directly use the ref ' + 'instead. This method will be removed in a future release.', (_ref$constructor$name = ref.constructor.name) != null ? _ref$constructor$name : '<<anonymous>>', 'getNode()');\n              return ref;\n            };\n          }\n        }\n      });\n      _this._attachProps(_this.props);\n      if (process.env.JEST_WORKER_ID) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachPropUpdater();\n        this._propsAnimated && this._propsAnimated.__detach();\n        this._detachNativeEvents();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this._invokeAnimatedPropsCallbackOnMount) {\n          this._invokeAnimatedPropsCallbackOnMount = false;\n          this._animatedPropsCallback();\n        }\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n        this._attachNativeEvents();\n        this._attachPropUpdater();\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        return this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = findNodeHandle(options.setNativeProps ? this : node);\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            prop.attachEvent(node, key);\n          } else if (prop != null && prop.current && prop.current instanceof WorkletEventHandler) {\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        var node = this._getEventViewRef();\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            prop.detachEvent(node, key);\n          } else if (prop != null && prop.current && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        var node = this._getEventViewRef();\n        var attached = new Set();\n        var nextEvts = new Set();\n        var viewTag;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            nextEvts.add(prop.__nodeID);\n          } else if (prop != null && prop.current && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === undefined) {\n              viewTag = prop.current.viewTag;\n            }\n          }\n        }\n        for (var _key in prevProps) {\n          var _prop = this.props[_key];\n          if (_prop instanceof AnimatedEvent) {\n            if (!nextEvts.has(_prop.__nodeID)) {\n              _prop.detachEvent(node, _key);\n            } else {\n              attached.add(_prop.__nodeID);\n            }\n          } else if (_prop != null && _prop.current && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            _prop.current.unregisterFromEvents();\n          }\n        }\n        for (var _key2 in this.props) {\n          var _prop2 = this.props[_key2];\n          if (_prop2 instanceof AnimatedEvent && !attached.has(_prop2.__nodeID)) {\n            _prop2.attachEvent(node, _key2);\n          } else if (_prop2 != null && _prop2.current && _prop2.current instanceof WorkletEventHandler && _prop2.current.reattachNeeded) {\n            _prop2.current.registerForEvents(viewTag, _key2);\n            _prop2.current.reattachNeeded = false;\n          }\n        }\n      }\n\n    }, {\n      key: \"_attachProps\",\n      value: function _attachProps(nextProps) {\n        var oldPropsAnimated = this._propsAnimated;\n        this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n        if (oldPropsAnimated !== this._propsAnimated) {\n          oldPropsAnimated && oldPropsAnimated.__detach();\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component$setN, _this$_component;\n          (_this$_component$setN = (_this$_component = this._component).setNativeProps) == null ? void 0 : _this$_component$setN.call(_this$_component, props);\n        }\n      }\n    }, {\n      key: \"_attachPropUpdater\",\n      value: function _attachPropUpdater() {\n        var viewTag = findNodeHandle(this);\n        NODE_MAPPING.set(viewTag, this);\n        if (NODE_MAPPING.size === 1) {\n          ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n        }\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this,\n          _this$props$animatedP;\n        var styles = Array.isArray(this.props.style) ? this.props.style : [this.props.style];\n        styles = flattenArray(styles);\n        var viewTag, viewName;\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(this);\n          viewName = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance == null ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance == null ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) == null ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          if (hostInstance && this._hasReanimated2Props(styles) && hostInstance.viewConfig) {\n            adaptViewConfig(hostInstance.viewConfig);\n          }\n        }\n        styles.forEach(function (style) {\n          if (style != null && style.viewDescriptor) {\n            style.viewDescriptor.value = {\n              tag: viewTag,\n              name: viewName\n            };\n            if (process.env.JEST_WORKER_ID) {\n              _this2.animatedStyle.value = _objectSpread(_objectSpread({}, _this2.animatedStyle.value), style.initial);\n              style.animatedStyle.current = _this2.animatedStyle;\n            }\n          }\n        });\n        if ((_this$props$animatedP = this.props.animatedProps) != null && _this$props$animatedP.viewDescriptor) {\n          this.props.animatedProps.viewDescriptor.value = {\n            tag: viewTag,\n            name: viewName\n          };\n        }\n      }\n    }, {\n      key: \"_hasReanimated2Props\",\n      value: function _hasReanimated2Props(flattenStyles) {\n        var _this$props$animatedP2;\n        if ((_this$props$animatedP2 = this.props.animatedProps) != null && _this$props$animatedP2.viewDescriptor) {\n          return true;\n        }\n        if (this.props.style) {\n          for (var _iterator = _createForOfIteratorHelperLoose(flattenStyles), _step; !(_step = _iterator()).done;) {\n            var style = _step.value;\n            if (style != null && style.hasOwnProperty('viewDescriptor')) {\n              return true;\n            }\n          }\n        }\n        return false;\n      }\n    }, {\n      key: \"_detachPropUpdater\",\n      value: function _detachPropUpdater() {\n        var viewTag = findNodeHandle(this);\n        NODE_MAPPING.delete(viewTag);\n        if (NODE_MAPPING.size === 0) {\n          ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._attachProps(this.props);\n        this._reattachNativeEvents(prevProps);\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n      }\n    }, {\n      key: \"_filterNonAnimatedStyle\",\n      value: function _filterNonAnimatedStyle(inputStyle) {\n        var style = {};\n        for (var key in inputStyle) {\n          var value = inputStyle[key];\n          if (!hasAnimatedNodes(value)) {\n            style[key] = value;\n          } else if (value instanceof AnimatedValue) {\n            style[key] = value._startingValue;\n          }\n        }\n        return style;\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop = function _loop(key) {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styles = Array.isArray(value) ? value : [value];\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptor) {\n                if (style.viewRef.current === null) {\n                  style.viewRef.current = _this3;\n                }\n                return style.initial;\n              } else {\n                return style;\n              }\n            });\n            props[key] = _this3._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n          } else if (key === 'animatedProps') {\n            Object.keys(value.initial).forEach(function (key) {\n              props[key] = value.initial[key];\n              if (value.viewRef.current === null) {\n                value.viewRef.current = _this3;\n              }\n            });\n          } else if (value instanceof AnimatedEvent) {\n            props[key] = dummyListener;\n          } else if (value != null && value.current && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = value.current.listeners ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (!(value instanceof AnimatedNode)) {\n            props[key] = value;\n          } else if (value instanceof AnimatedValue) {\n            props[key] = value._startingValue;\n          }\n        };\n        for (var key in inputProps) {\n          _loop(key);\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (process.env.JEST_WORKER_ID) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  AnimatedComponent.displayName = \"AnimatedComponent(\" + (Component.displayName || Component.name || 'Component') + \")\";\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref == null ? null : {\n      forwardedRef: ref\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 7\n      }\n    }));\n  });\n}","map":{"version":3,"names":["React","ReanimatedEventEmitter","AnimatedEvent","AnimatedNode","AnimatedValue","createOrReusePropsNode","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","NODE_MAPPING","Map","listener","data","component","get","viewTag","_updateFromNative","props","dummyListener","hasAnimatedNodes","value","Array","isArray","some","item","Object","keys","key","flattenArray","array","resultArr","_flattenArray","arr","forEach","push","createAnimatedComponent","Component","options","prototype","isReactComponent","AnimatedComponent","_invokeAnimatedPropsCallbackOnMount","_animatedPropsCallback","_component","setNativeProps","forceUpdate","_propsAnimated","__getValue","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","ref","getNode","console","warn","constructor","name","_attachProps","process","env","JEST_WORKER_ID","animatedStyle","_detachPropUpdater","__detach","_detachNativeEvents","setNativeView","_attachNativeEvents","_attachPropUpdater","_attachAnimatedStyles","getScrollableNode","node","_getEventViewRef","findNodeHandle","prop","attachEvent","current","registerForEvents","detachEvent","unregisterFromEvents","prevProps","attached","Set","nextEvts","add","__nodeID","undefined","has","reattachNeeded","nextProps","oldPropsAnimated","set","size","addListener","styles","style","viewName","Platform","OS","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","viewConfig","uiViewClassName","_hasReanimated2Props","viewDescriptor","tag","initial","animatedProps","flattenStyles","hasOwnProperty","delete","removeAllListeners","_reattachNativeEvents","inputStyle","_startingValue","inputProps","processedStyle","map","viewRef","_filterNonAnimatedStyle","StyleSheet","flatten","eventNames","length","eventName","listeners","_filterNonAnimatedProps","platformProps","select","web","default","collapsable","displayName","forwardRef","AnimatedComponentWrapper"],"sources":["D:/nouveaux projet/ajout panier buttonsheet/node_modules/react-native-reanimated/lib/createAnimatedComponent.js"],"sourcesContent":["import React from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport ReanimatedEventEmitter from './ReanimatedEventEmitter';\n\nimport AnimatedEvent from './reanimated1/core/AnimatedEvent';\nimport AnimatedNode from './reanimated1/core/AnimatedNode';\nimport AnimatedValue from './reanimated1/core/AnimatedValue';\nimport { createOrReusePropsNode } from './reanimated1/core/AnimatedProps';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\n\nimport invariant from 'fbjs/lib/invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\n\nconst NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  const component = NODE_MAPPING.get(data.viewTag);\n  component && component._updateFromNative(data.props);\n}\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction hasAnimatedNodes(value) {\n  if (value instanceof AnimatedNode) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.some((item) => hasAnimatedNodes(item));\n  }\n  if (value && typeof value === 'object') {\n    return Object.keys(value).some((key) => hasAnimatedNodes(value[key]));\n  }\n  return false;\n}\n\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return array;\n  }\n  const resultArr = [];\n\n  const _flattenArray = (arr) => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nexport default function createAnimatedComponent(Component, options = {}) {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    '`createAnimatedComponent` does not support stateless functional components; ' +\n      'use a class component instead.'\n  );\n\n  class AnimatedComponent extends React.Component {\n    _invokeAnimatedPropsCallbackOnMount = false;\n\n    constructor(props) {\n      super(props);\n      this._attachProps(this.props);\n      if (process.env.JEST_WORKER_ID) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachPropUpdater();\n      this._propsAnimated && this._propsAnimated.__detach();\n      this._detachNativeEvents();\n    }\n\n    componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n      this._attachNativeEvents();\n      this._attachPropUpdater();\n      this._attachAnimatedStyles();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      const viewTag = findNodeHandle(options.setNativeProps ? this : node);\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          prop.attachEvent(node, key);\n        } else if (\n          prop?.current &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.registerForEvents(viewTag, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      const node = this._getEventViewRef();\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          prop.detachEvent(node, key);\n        } else if (\n          prop?.current &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _reattachNativeEvents(prevProps) {\n      const node = this._getEventViewRef();\n      const attached = new Set();\n      const nextEvts = new Set();\n      let viewTag;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          nextEvts.add(prop.__nodeID);\n        } else if (\n          prop?.current &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === undefined) {\n            viewTag = prop.current.viewTag;\n          }\n        }\n      }\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          if (!nextEvts.has(prop.__nodeID)) {\n            // event was in prev props but not in current props, we detach\n            prop.detachEvent(node, key);\n          } else {\n            // event was in prev and is still in current props\n            attached.add(prop.__nodeID);\n          }\n        } else if (\n          prop?.current &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent && !attached.has(prop.__nodeID)) {\n          // not yet attached\n          prop.attachEvent(node, key);\n        } else if (\n          prop?.current &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.registerForEvents(viewTag, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on native components\n    // If you want to animate a composite component, you need to re-render it.\n    // In this case, we have a fallback that uses forceUpdate.\n    _animatedPropsCallback = () => {\n      if (this._component == null) {\n        // AnimatedProps is created in will-mount because it's used in render.\n        // But this callback may be invoked before mount in async mode,\n        // In which case we should defer the setNativeProps() call.\n        // React may throw away uncommitted work in async mode,\n        // So a deferred call won't always be invoked.\n        this._invokeAnimatedPropsCallbackOnMount = true;\n      } else if (typeof this._component.setNativeProps !== 'function') {\n        this.forceUpdate();\n      } else {\n        this._component.setNativeProps(this._propsAnimated.__getValue());\n      }\n    };\n\n    _attachProps(nextProps) {\n      const oldPropsAnimated = this._propsAnimated;\n\n      this._propsAnimated = createOrReusePropsNode(\n        nextProps,\n        this._animatedPropsCallback,\n        oldPropsAnimated\n      );\n      // If prop node has been reused we don't need to call into \"__detach\"\n      if (oldPropsAnimated !== this._propsAnimated) {\n        // When you call detach, it removes the element from the parent list\n        // of children. If it goes to 0, then the parent also detaches itself\n        // and so on.\n        // An optimization is to attach the new elements and THEN detach the old\n        // ones instead of detaching and THEN attaching.\n        // This way the intermediate state isn't to go to 0 and trigger\n        // this expensive recursive detaching to then re-attach everything on\n        // the very next operation.\n        oldPropsAnimated && oldPropsAnimated.__detach();\n      }\n    }\n\n    _updateFromNative(props) {\n      if (options.setNativeProps) {\n        options.setNativeProps(this._component, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component.setNativeProps?.(props);\n      }\n    }\n\n    _attachPropUpdater() {\n      const viewTag = findNodeHandle(this);\n      NODE_MAPPING.set(viewTag, this);\n      if (NODE_MAPPING.size === 1) {\n        ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n      }\n    }\n\n    _attachAnimatedStyles() {\n      let styles = Array.isArray(this.props.style)\n        ? this.props.style\n        : [this.props.style];\n      styles = flattenArray(styles);\n      let viewTag, viewName;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(this);\n        viewName = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n        // update UI props whitelist for this view\n        if (\n          hostInstance &&\n          this._hasReanimated2Props(styles) &&\n          hostInstance.viewConfig\n        ) {\n          adaptViewConfig(hostInstance.viewConfig);\n        }\n      }\n\n      styles.forEach((style) => {\n        if (style?.viewDescriptor) {\n          style.viewDescriptor.value = { tag: viewTag, name: viewName };\n          if (process.env.JEST_WORKER_ID) {\n            /**\n             * We need to connect Jest's TestObject instance whose contains just props object\n             * with the updateProps() function where we update the properties of the component.\n             * We can't update props object directly because TestObject contains a copy of props - look at render function:\n             * const props = this._filterNonAnimatedProps(this.props);\n             */\n            this.animatedStyle.value = {\n              ...this.animatedStyle.value,\n              ...style.initial,\n            };\n            style.animatedStyle.current = this.animatedStyle;\n          }\n        }\n      });\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptor) {\n        this.props.animatedProps.viewDescriptor.value = {\n          tag: viewTag,\n          name: viewName,\n        };\n      }\n    }\n\n    _hasReanimated2Props(flattenStyles) {\n      if (this.props.animatedProps?.viewDescriptor) {\n        return true;\n      }\n      if (this.props.style) {\n        for (const style of flattenStyles) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (style?.hasOwnProperty('viewDescriptor')) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    _detachPropUpdater() {\n      const viewTag = findNodeHandle(this);\n      NODE_MAPPING.delete(viewTag);\n      if (NODE_MAPPING.size === 0) {\n        ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      this._attachProps(this.props);\n      this._reattachNativeEvents(prevProps);\n\n      this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n    }\n\n    _setComponentRef = setAndForwardRef({\n      getForwardedRef: () => this.props.forwardedRef,\n      setLocalRef: (ref) => {\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n\n        // TODO: Delete this after React Native also deletes this deprecation helper.\n        if (ref != null && ref.getNode == null) {\n          ref.getNode = () => {\n            console.warn(\n              '%s: Calling %s on the ref of an Animated component ' +\n                'is no longer necessary. You can now directly use the ref ' +\n                'instead. This method will be removed in a future release.',\n              ref.constructor.name ?? '<<anonymous>>',\n              'getNode()'\n            );\n            return ref;\n          };\n        }\n      },\n    });\n\n    _filterNonAnimatedStyle(inputStyle) {\n      const style = {};\n      for (const key in inputStyle) {\n        const value = inputStyle[key];\n        if (!hasAnimatedNodes(value)) {\n          style[key] = value;\n        } else if (value instanceof AnimatedValue) {\n          // if any style in animated component is set directly to the `Value` we set those styles to the first value of `Value` node in order\n          // to avoid flash of default styles when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n          style[key] = value._startingValue;\n        }\n      }\n      return style;\n    }\n\n    _filterNonAnimatedProps(inputProps) {\n      const props = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styles = Array.isArray(value) ? value : [value];\n          const processedStyle = styles.map((style) => {\n            if (style && style.viewDescriptor) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              if (style.viewRef.current === null) {\n                style.viewRef.current = this;\n              }\n              return style.initial;\n            } else {\n              return style;\n            }\n          });\n          props[key] = this._filterNonAnimatedStyle(\n            StyleSheet.flatten(processedStyle)\n          );\n        } else if (key === 'animatedProps') {\n          Object.keys(value.initial).forEach((key) => {\n            props[key] = value.initial[key];\n            if (value.viewRef.current === null) {\n              value.viewRef.current = this;\n            }\n          });\n        } else if (value instanceof AnimatedEvent) {\n          // we cannot filter out event listeners completely as some components\n          // rely on having a callback registered in order to generate events\n          // alltogether. Therefore we provide a dummy callback here to allow\n          // native event dispatcher to hijack events.\n          props[key] = dummyListener;\n        } else if (\n          value?.current &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = value.current.listeners\n                ? value.current.listeners[eventName]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (!(value instanceof AnimatedNode)) {\n          props[key] = value;\n        } else if (value instanceof AnimatedValue) {\n          // if any prop in animated component is set directly to the `Value` we set those props to the first value of `Value` node in order\n          // to avoid default values for a short moment when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n          props[key] = value._startingValue;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (process.env.JEST_WORKER_ID) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref == null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}