{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/circleci/repo/src/ReText.tsx\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\nvar styles = StyleSheet.create({\n  baseStyle: {\n    color: \"black\"\n  }\n});\nAnimated.addWhitelistedNativeProps({\n  text: true\n});\nvar AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\nvar ReText = function ReText(props) {\n  var _style$props = _objectSpread({\n      style: {}\n    }, props),\n    text = _style$props.text,\n    style = _style$props.style;\n  var animatedProps = useAnimatedProps(function () {\n    const _f = function () {\n      return {\n        text: text.value\n      };\n    };\n    _f._closure = {\n      text\n    };\n    _f.asString = \"function _f(){const{text}=jsThis._closure;{return{text:text.value};}}\";\n    _f.__workletHash = 10205633828402;\n    _f.__location = \"D:\\\\nouveaux projet\\\\ajout panier buttonsheet\\\\node_modules\\\\@gorhom\\\\bottom-sheet\\\\node_modules\\\\react-native-redash\\\\lib\\\\module\\\\ReText.js (1:1444)\";\n    global.__reanimatedWorkletInit(_f);\n    return _f;\n  }());\n  return React.createElement(AnimatedTextInput, _extends({\n    underlineColorAndroid: \"transparent\",\n    editable: false,\n    value: text.value,\n    style: [styles.baseStyle, style]\n  }, {\n    animatedProps: animatedProps\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }));\n};\nexport default ReText;","map":{"version":3,"sources":["ReText.tsx"],"names":["React","Animated","useAnimatedProps","styles","StyleSheet","create","baseStyle","color","addWhitelistedNativeProps","text","AnimatedTextInput","createAnimatedComponent","TextInput","ReText","props","style","animatedProps","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AAAA;AACA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAXD,CAAkB;EAC/BE,SAAS,EAAE;IACTC,KAAK,EAAE;EADE;AADoB,CAAlBH,CAAf;AAKAH,QAAQ,CAACO,yBAATP,CAAmC;EAAEQ,IAAI,EAAE;AAAR,CAAnCR,CAAAA;AAOA,IAAMS,iBAAiB,GAAGT,QAAQ,CAACU,uBAATV,CAAiCW,SAAjCX,CAA1B;AAEA,IAAMY,MAAM,GAANA,SAAAA,MAAS,CAACC,KAAD,EAAsB;EAAA,IAAA,YAAA,GAAA,aAAA,CAAA;MACTC,KAAK,EAAE,CAAA;IADE,CAAA,EACKD,KADL,CAAA;IAC3BL,IAD2B,GAAA,YAAA,CAC3BA,IAD2B;IACrBM,KADqB,GAAA,YAAA,CACrBA,KADqB;EAEnC,IAAMC,aAAa,GAAGd,gBAAgB;IAAA,uBAAO;MAC3C,OAAO;QACLO,IAAI,EAAEA,IAAI,CAACQ;MADN,CAAP;IAKD,CANqC;IAAA;MAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA,IAAtC;EAOA,OACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;IACE,qBAAqB,EAAC,aADxB;IAEE,QAAQ,EAAE,KAFZ;IAGE,KAAK,EAAER,IAAI,CAACQ,KAHd;IAIE,KAAK,EAAE,CAACd,MAAM,CAACG,SAAR,EAAmBS,KAAnB;EAJT,CAAA,EAKM;IAAEC,aAAa,EAAbA;EAAF,CALN,EAAA;IAAA,QAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA;EAAA,CAAA,CAAA,CADF;AASD,CAlBD;AAoBA,eAAeH,MAAf","sourcesContent":["import React from \"react\";\nimport type { TextProps as RNTextProps } from \"react-native\";\nimport { StyleSheet, TextInput } from \"react-native\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\n\nconst styles = StyleSheet.create({\n  baseStyle: {\n    color: \"black\",\n  },\n});\nAnimated.addWhitelistedNativeProps({ text: true });\n\ninterface TextProps {\n  text: Animated.SharedValue<string>;\n  style?: Animated.AnimateProps<RNTextProps>[\"style\"];\n}\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nconst ReText = (props: TextProps) => {\n  const { text, style } = { style: {}, ...props };\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      text: text.value,\n      // Here we use any because the text prop is not available in the type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  });\n  return (\n    <AnimatedTextInput\n      underlineColorAndroid=\"transparent\"\n      editable={false}\n      value={text.value}\n      style={[styles.baseStyle, style]}\n      {...{ animatedProps }}\n    />\n  );\n};\n\nexport default ReText;\n"]},"metadata":{},"sourceType":"module"}